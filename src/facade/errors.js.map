{"version":3,"file":"errors.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/facade/errors.ts"],"names":[],"mappings":"AACA;;;;;;;GAOG;AACH;IACE,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;AACnC,CAAC;AACD,+BAA+B,KAAK;IAGpC;;OAEG;IACH,YAAY,OAAe;QACvB,qEAAqE;QACrE,8DAA8D;QAC9D,MAAM,WAAW,GAAG,MAAM,OAAO,CAAiB,CAAC;QACnD,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;IAClC,CAAC;IACH;;OAEG;IACH,IAAI,OAAO,KAAK,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;IACnD;;;OAGG;IACH,IAAI,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC;IAC7D;;OAEG;IACH,IAAI,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7C;;OAEG;IACH,IAAI,KAAK,KAAK,MAAM,CAAC,CAAkB,CAAE,IAAI,CAAC,YAAoB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7E;;;OAGG;IACH,IAAI,KAAK,CAAC,KAAK,IAAI,CAAkB,CAAE,IAAI,CAAC,YAAoB,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;IACnF;;OAEG;IACH,QAAQ,KAAK,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;AACnD,CAAC;AAED;IACA,gBAAgB;IAChB,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC;AACjC,CAAC;AAED,kCAAkC,SAAS;IAE3C;;;OAGG;IACH,YAAY,OAAe,EAAE,KAAU;QACnC,MAAM,GAAG,OAAO,eAAe,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAE,KAAM,EAAE,CAAC,CAAC;QACjF,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;IACH;;OAEG;IACH,IAAI,KAAK;QACL,MAAM,CAAC,CAAkB,CAAE,CAAC,IAAI,CAAC,aAAa,YAAY,KAAK,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAS,CAAC,CAAC;aAC9G,KAAK,CAAC;IACb,CAAC;AACH,CAAC;AAED;IACA,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,aAAa,CAAC;AACrC,CAAC","sourcesContent":["\n/**\n * @license undefined\n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @return {?}\n */\nexport function unimplemented(): any {\n  throw new Error('unimplemented');\n}\nexport class BaseError extends Error {\n  /** @internal **/\n  _nativeError: Error;\n/**\n * @param {?} message\n */\nconstructor(message: string) {\n    // Errors don't use current this, instead they create a new instance.\n    // We have to do forward all of our api to the nativeInstance.\n    const nativeError = super(message) as any as Error;\n    this._nativeError = nativeError;\n  }\n/**\n * @return {?}\n */\nget message() { return this._nativeError.message; }\n/**\n * @param {?} message\n * @return {?}\n */\nset message(message) { this._nativeError.message = message; }\n/**\n * @return {?}\n */\nget name() { return this._nativeError.name; }\n/**\n * @return {?}\n */\nget stack() { return ( /** @type {?} */((this._nativeError as any))).stack; }\n/**\n * @param {?} value\n * @return {?}\n */\nset stack(value) { ( /** @type {?} */((this._nativeError as any))).stack = value; }\n/**\n * @return {?}\n */\ntoString() { return this._nativeError.toString(); }\n}\n\nfunction BaseError_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseError.prototype._nativeError;\n}\n\nexport class WrappedError extends BaseError {\n  originalError: any;\n/**\n * @param {?} message\n * @param {?} error\n */\nconstructor(message: string, error: any) {\n    super(`${message} caused by: ${error instanceof Error ? error.message: error }`);\n    this.originalError = error;\n  }\n/**\n * @return {?}\n */\nget stack() {\n    return ( /** @type {?} */(((this.originalError instanceof Error ? this.originalError : this._nativeError) as any)))\n        .stack;\n  }\n}\n\nfunction WrappedError_tsickle_Closure_declarations() {\n/** @type {?} */\nWrappedError.prototype.originalError;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}